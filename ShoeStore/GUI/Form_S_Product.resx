<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dGV.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>